version: '3'
services:
  postgres:
    container_name: mastodon_postgres
    restart: always
    image: postgres:14-alpine
    shm_size: 256mb
    networks:
      - internal_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "mastodon"]
    volumes:
      - ./postgres:/var/lib/postgresql/data
    env_file: 
      - .env.production

  redis:
    restart: always
    image: redis:6.0-alpine
    networks:
      - internal_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    volumes:
      - ./redis:/data

  web:
    container_name: mstdn_web
    image: tootsuite/mastodon
    restart: always
    env_file: .env.production
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"
    networks:
      - proxy_network
      - internal_network
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:3000/health || exit 1"]
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./public/system:/mastodon/public/system

  streaming:
    container_name: mstdn_streaming
    image: tootsuite/mastodon
    restart: always
    env_file: 
      - .env.production
    command: node ./streaming
    networks:
      - proxy_network
      - internal_network
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1"]
    ports:
      - "127.0.0.1:4000:4000"
    depends_on:
      - postgres
      - redis

  sidekiq:
    image: tootsuite/mastodon
    restart: always
    env_file: .env.production
    command: bundle exec sidekiq
    depends_on:
      - postgres
      - redis
    networks:
      - proxy_network
      - internal_network
    volumes:
      - ./public/system:/mastodon/public/system
    
networks:
  proxy_network:
    external: true
  internal_network:
    internal: true
